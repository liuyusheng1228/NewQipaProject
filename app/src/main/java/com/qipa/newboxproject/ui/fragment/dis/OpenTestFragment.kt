package com.qipa.newboxproject.ui.fragment.dis

import android.os.Bundle
import androidx.recyclerview.widget.LinearLayoutManager
import com.kingja.loadsir.core.LoadService
import com.qipa.newboxproject.R
import com.qipa.newboxproject.app.base.BaseFragment
import com.qipa.newboxproject.app.ext.init
import com.qipa.newboxproject.app.ext.loadServiceInit
import com.qipa.newboxproject.app.ext.showLoading
import com.qipa.newboxproject.app.util.GroupModel
import com.qipa.newboxproject.data.model.bean.AriticleResponse
import com.qipa.newboxproject.data.model.bean.OpenTestTypeBean
import com.qipa.newboxproject.databinding.FragmentOpenTestBinding
import com.qipa.newboxproject.ui.adapter.SectionQuickOpenTestAdapter
import com.qipa.newboxproject.viewmodel.state.OpenTestModel
import kotlinx.android.synthetic.main.fragment_open_test.*
import kotlinx.android.synthetic.main.include_recyclerview.*

class OpenTestFragment : BaseFragment<OpenTestModel,FragmentOpenTestBinding>() {


    //界面状态管理者
    private lateinit var loadsir: LoadService<Any>

    private val mDataTypeList : ArrayList<OpenTestTypeBean> = arrayListOf<OpenTestTypeBean>()

    private val sectionQuickOpenTestAdapter : SectionQuickOpenTestAdapter by lazy { SectionQuickOpenTestAdapter(mActivity,
        mDataTypeList) }

    private val mAriticleResponseList : ArrayList<AriticleResponse> = arrayListOf()

    override fun layoutId() = R.layout.fragment_open_test
    lateinit var ariticleResponse : AriticleResponse

    override fun initView(savedInstanceState: Bundle?) {
        loadsir = loadServiceInit(sticky_layout){
            loadsir.showLoading()
        }
        rv_list.init(LinearLayoutManager(context),sectionQuickOpenTestAdapter).let {
        }
        GroupModel.getGroups(10,20)?.let { mDataTypeList.addAll(it) }

        sectionQuickOpenTestAdapter.notifyDataSetChanged()
    }
    companion object {
        fun newInstance( isNew: Boolean): OpenTestFragment {
            val args = Bundle()
            args.putBoolean("isNew", isNew)
            val fragment = OpenTestFragment()
            fragment.arguments = args
            return fragment
        }
    }

    override fun onBackPressed(): Boolean {
        return false
    }
}